<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SeungHun</title>
    <description>PH.D Student at the Sangmyung University
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 30 Mar 2021 18:01:08 +0900</pubDate>
    <lastBuildDate>Tue, 30 Mar 2021 18:01:08 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>iTerm2 + Zsh + Oh My Zsh 설치 &amp; 설정하기</title>
        <description>&lt;p&gt;맥을 설치하면 기본으로 Terminal이 설치되어있지만 사용하기에 불편하고 멋있어(?) 보이지 않아서 다른 터미널을 설치해서 사용하려고 한다.
맥에서 가장 많이 추천되고 오랫동안 내가 사용해온 iTerm2 + zsh 를 설치하고 설정하는 방법을 알아보자.
iTerm2를 사용하면서 가장 유용했던 기능은 화면 분할 기능이다. 데이터 크롤링을 하는데 10대 이상의 컴퓨터를 동시에 접속해서 관리 하는데 기본 터미널로만은 너무 힘들어서 화면 분할도 되고 다른 많은 기능도 있는 iTerm2를 찾게 됐다. 설치를 하고 설정을 해보자.&lt;/p&gt;

&lt;h3 id=&quot;iterm2--zsh--oh-my-zsh-설치&quot;&gt;iTerm2 + Zsh + Oh My Zsh 설치&lt;/h3&gt;

&lt;h5 id=&quot;1-iterm2-설치&quot;&gt;1. iTerm2 설치&lt;/h5&gt;
&lt;p&gt;아래 링크에 들어가서 다운받고 알집을 풀어서 설치하면 된다.
iTerm2 홈페이지: &lt;a href=&quot;https://iterm2.com/&quot;&gt;https://iterm2.com/&lt;/a&gt;&lt;br /&gt;
iTerm2 기본 설치 화면이다.
&lt;img src=&quot;/assets/img/post_image/iterm_install/iterm.png&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2-zsh-설치&quot;&gt;2. Zsh 설치&lt;/h5&gt;
&lt;p&gt;그런데 터미널의 제목표시줄을 보면 zsh가 기본 쉘로 이미 설정된 것을 볼 수 있다.
확인해보니, MacOS 10.15버전인 카탈리나부터 기본 쉘이 bash에서 zsh로 변경되어서 OS를 설치하면서 기본으로 설치되어 있다.&lt;/p&gt;

&lt;p&gt;현재 내 컴퓨터에 어떤 쉘들이 설치되어 있는지 확인하려면 다음과 같은 명령으로 확인할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/shells
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zsh를 설치하기 위해서는 MacOS 패키지 관리 프로그램인 Homebrew를 사용해서 설치하면 된다.
Homebrew를 설치하는 방법은 &lt;a href=&quot;https://leesh90.github.io/environment/2021/03/30/homebrew_install/&quot;&gt;Homebrew 설치 &amp;amp; 사용하기&lt;/a&gt;를 참고하면 된다.&lt;/p&gt;

&lt;p&gt;다음과 같은 쉘들이 기본으로 설치된 것을 확인할 수 있다.
&lt;img src=&quot;/assets/img/post_image/iterm_install/installed_shell_list.png&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약, 기본 쉘을 zsh에서 bash로 변경하고 싶으면 다음 명령어를 사용하면 된다.&lt;/p&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음으로는 쉘을 사용하는데 도움을 많이 주는 Oh My Zsh을 설치한다.
Oh My Zsh은 타이핑 교정, 명령어 추천, 자동 완성 기능등 여러가지 기능이 있다.
설치는 아래 사이트에서 설치 명령어를 찾아서 하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ohmyz.sh/#install&quot;&gt;https://ohmyz.sh/#install&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh&quot;&gt;https://github.com/ohmyzsh/ohmyzsh&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- 
&lt;img src='/assets/img/post_image/virtualenv-add-jupyter/kernel_add_check.png' width=&quot;270&quot; height=&quot;300&quot;&gt; --&gt;
</description>
        <pubDate>Tue, 30 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/environment/2021/03/30/iterm_install/</link>
        <guid isPermaLink="true">http://localhost:4000/environment/2021/03/30/iterm_install/</guid>
        
        <category>etc</category>
        
        
        <category>environment</category>
        
      </item>
    
      <item>
        <title>Homebrew 설치 &amp; 사용하기</title>
        <description>&lt;p&gt;MacOS를 설치하고 가장 먼저 해야될 일중에 하나가 MacOS 패키지 관리 프로그램인 Homebrew를 설정하는 것이다.
리눅스에서는 yum, apt와 같은 역할을 한다고 볼수있다.&lt;/p&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- 
&lt;img src='/assets/img/post_image/virtualenv-add-jupyter/kernel_add_check.png' width=&quot;270&quot; height=&quot;300&quot;&gt; --&gt;
</description>
        <pubDate>Tue, 30 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/environment/2021/03/30/homebrew_install/</link>
        <guid isPermaLink="true">http://localhost:4000/environment/2021/03/30/homebrew_install/</guid>
        
        <category>etc</category>
        
        
        <category>environment</category>
        
      </item>
    
      <item>
        <title>NAVER API를 사용해서 크롤링하기</title>
        <description>&lt;h4 id=&quot;1-네이버-개발자-api-가입--이용-신청&quot;&gt;1. 네이버 개발자 API 가입 &amp;amp; 이용 신청&lt;/h4&gt;

&lt;p&gt;네이버 API를 사용하기 위해서는 우선 네이버 개발자 센터에 가입하고 오픈 API 이용 신청을 해야 한다.
아래 링크에 들어가서 신청을 한다.&lt;/p&gt;

&lt;p&gt;네이버 개발자 센터 : &lt;a href=&quot;https://developers.naver.com/main/&quot;&gt;https://developers.naver.com/main/&lt;/a&gt;
&lt;img src=&quot;/assets/img/post_image/crwaling_naver_api/developers_naver_main.png&quot; /&gt;
개발자 센터 메인 페이지에서 [Application] - [애플리케이션 등록]을 누르고 약관 동의, 계정 정보 등록을 하면 아래와 같이 애플리케이션 등록을 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/img/post_image/crwaling_naver_api/Application_registration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;애플리케이션 이름은 적당히 내가 원하는 이름을 적고, 사용 API에는 여러 가지가 있지만 나는 검색 API를 사용할 예정이므로 검색을 선택한다. 비 로그인 오픈 API 서비스 환경에는 Android, IOS, WEB 설정 이렇게 3가지가 있는데, 나는 로컬 컴퓨터 WEB 환경에서 사용하므로 WEB만 선택하고 URL은 http://localhost를 입력하고 등록한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/img/post_image/crwaling_naver_api/Application_information.png&quot; /&gt;
등록에 완료하면 위와 같이 내가 등록한 애플리케이션에 대한 정보를 볼 수 있다. Client ID와 Client Secret은 네이버 API를 사용할 때 코드에 입력해야 하므로 따로 기록해 놓는다.
일반적인 사용자들은 하단에 보이는 것처럼 하루 API 사용량이 25,000번으로 제한되어 있다. 일일 사용량을 초과해서 사용하려면 왼쪽에 API 제휴 신청을 하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-검색-api-documents&quot;&gt;2. 검색 API Documents&lt;/h4&gt;

&lt;p&gt;네이버 개발자 메인 페이지 상단에서 [Documents] - [서비스 API] - [검색]을 선택하면 검색 API에 대한 Documents를 아래와 같이 확인할 수 있다.
&lt;img src=&quot;/assets/img/post_image/crwaling_naver_api/search_api_documents.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;페이지를 내려서 확인해보면 Python 코드도 확인할 수 있다. 나는 Python을 사용해서 크롤링을 하므로 이 코드를 가지고 수정해서 사용하면 된다.
&lt;img src=&quot;/assets/img/post_image/crwaling_naver_api/search_api_python_example.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3&quot;&gt;3.&lt;/h4&gt;

&lt;!-- 
&lt;img src='/assets/img/post_image/virtualenv-add-jupyter/kernel_add_check.png' width=&quot;270&quot; height=&quot;300&quot;&gt; --&gt;
</description>
        <pubDate>Mon, 29 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/development/2021/03/29/crawling_naver_api/</link>
        <guid isPermaLink="true">http://localhost:4000/development/2021/03/29/crawling_naver_api/</guid>
        
        <category>crawling</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>selenium을 사용한 데이터 크롤링하기</title>
        <description>&lt;h4 id=&quot;사전-설치&quot;&gt;사전 설치&lt;/h4&gt;

&lt;h5 id=&quot;1-selenium--beautifulsoup설치하기&quot;&gt;1. Selenium &amp;amp; BeautifulSoup설치하기&lt;/h5&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;selenium
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;BeautifulSoup4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;2-구글-웹-드라이브-설치--다운로드&quot;&gt;2. 구글 웹 드라이브 설치 &amp;amp; 다운로드&lt;/h5&gt;

&lt;p&gt;Selenium을 사용해서 크롤링을 하기 위해서는 웹 드라이브가 필요하다.
나는 구글 웹 드라이브를 사용해본다.&lt;/p&gt;

&lt;p&gt;구글 웹 드라이브 다운로드 홈페이지 : &lt;a href=&quot;https://chromedriver.chromium.org/downloads&quot;&gt;https://chromedriver.chromium.org/downloads&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다운로드 홈페이지에 접속하면 아래와 같이 다운을 받을수가 있다.
아래에서 다운을 받을 때, 주의 해야 할 부분이 있는데 내가 사용하는 크롬의 버전과 일치를 해야한다.
&lt;img src=&quot;/assets/img/post_image/crawling_selenium/chrome_donwload_homepage.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나의 크롬 정보를 살펴보기 위해서 크롬에서 Settings - About Chrome 으로 들어가 확인을 해본다.
&lt;img src=&quot;/assets/img/post_image/crawling_selenium/about_chrome.png&quot; /&gt;
크롬의 버전이 89.0.~ 이므로 89 버전의 웹 드라이버를 다운받는다.&lt;/p&gt;

&lt;!-- 
&lt;img src='/assets/img/post_image/virtualenv-add-jupyter/kernel_add_check.png' width=&quot;270&quot; height=&quot;300&quot;&gt; --&gt;
</description>
        <pubDate>Thu, 25 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/development/2021/02/25/crawling_selenium/</link>
        <guid isPermaLink="true">http://localhost:4000/development/2021/02/25/crawling_selenium/</guid>
        
        <category>crawling</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>Jupyter Notebook에 가상환경 커널 추가하기</title>
        <description>&lt;p&gt;먼저 virtualenv를 사용해서 가상환경을 만들고 활성화 시켜줍니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; python2.7 ~/Desktop/py27
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/Desktop/py27/bin/active
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook ipykernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 다음으로 notebook과 ipykernel을 설치합니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook ipykernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Jupyter Notebook에 새로 만든 가상환경을 추가합니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; ipykernel &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;가상환경 이름] &lt;span class=&quot;nt&quot;&gt;--display-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[Jupyter notebook에 등록되는 이름]&quot;&lt;/span&gt;
python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; ipykernel &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; py27 &lt;span class=&quot;nt&quot;&gt;--display-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;py27_test&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;완료가 되었으면 Jupyter Notebook을 실행시켜서 살펴보면 다음과 같이 확인 할 수 있습니다.
&lt;img src=&quot;/assets/img/post_image/virtualenv-add-jupyter/kernel_add_check.png&quot; width=&quot;270&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/environment/2021/02/16/virtualenv-add-jupyter/</link>
        <guid isPermaLink="true">http://localhost:4000/environment/2021/02/16/virtualenv-add-jupyter/</guid>
        
        <category>python</category>
        
        
        <category>environment</category>
        
      </item>
    
      <item>
        <title>Using both Python 2.x &amp; 3.x</title>
        <description>&lt;h5 id=&quot;python2x-설정&quot;&gt;python2.x 설정&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; python2.7 ~/Desktop/py27
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/Desktop/py27/bin/active
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook ipykernel
ipython kernel &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;python3x-설정&quot;&gt;python3.x 설정&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; python3 ~/Desktop/py3
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/Desktop/py3/bin/active
pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook ipykernel
ipython kernel &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 16 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/environment/2021/02/16/python2_3/</link>
        <guid isPermaLink="true">http://localhost:4000/environment/2021/02/16/python2_3/</guid>
        
        <category>python</category>
        
        
        <category>environment</category>
        
      </item>
    
      <item>
        <title>Docker Command</title>
        <description>&lt;h5 id=&quot;docker-이미지-가져오기&quot;&gt;Docker 이미지 가져오기&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull [image name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/environment/2021/02/04/docker-command/</link>
        <guid isPermaLink="true">http://localhost:4000/environment/2021/02/04/docker-command/</guid>
        
        <category>docker</category>
        
        
        <category>environment</category>
        
      </item>
    
  </channel>
</rss>